#pragma once

#include <bitset>
#include <string_view>
#include <unordered_map>

enum class Grammeme {
    Post,

    Noun,
    AdjectiveFull,
    AdjectiveShort,
    Comparative,
    Verb,
    Infinitive,
    ParticipleFull,
    ParticipleShort,
    Gerund,
    Numeral,
    Adverb,
    Pronoun,
    Predicative,
    Preposition,
    Conjunction,
    Particle,
    Interjection,

    Animacy,
    Gender,
    Number,
    Case,
    Aspect,
    Transitivity,
    Person,
    Tense,
    Mood,
    Clusivity,
    Voice,

    Animate,
    Inanimate,
    Masculine,
    Feminine,
    Neuter,
    Common,
    Singular,
    Plural,
    Nominative,
    Genitive,
    Dative,
    Accusative,
    Ablative,
    Locative,
    Vocative,
    Genitive1,
    Genitive2,
    Accusative2,
    Locative1,
    Locative2,
    Perfect,
    Imperfect,
    Transitive,
    Intransitive,
    FirstPerson,
    SecondPerson,
    ThirdPerson,
    Present,
    Past,
    Future,
    Indicative,
    Imperative,
    Inclusive,
    Exclusive,
    Active,
    Passive,

    SingularOnly,
    PluralOnly,
    Fixed,
    Abbreviation,
    Name,
    Surname,
    Patronymic,
    Toponym,
    Organization,
    Trademark,
    NominalizationX,
    Superlative,
    Qualitative,
    Pronominal,
    Ordinal,
    Possessive,
    EndingEy,
    EndingOy,
    Comparative2,
    EndingEj,
    Impersonal,
    ImpersonalX,
    Multiple,
    Reflexive,
    Informal,
    Slang,
    Archaic,
    Literary,
    Typo,
    Distortion,
    Interrogative,
    Demonstrative,
    Parenthetic,
    EndingBe,
    EndingEn,
    EndingIe,
    EndingBi,
    GerundImperfect,
    PredicativeX,
    Counting,
    Collective,
    EndingShi,
    AfterPreposition,
    AnimateX,
    AltPreposition,
    Anaphoric,
    Initial,
    AdjectiveX,
    GenderSway,
    Hypothetical,

    Unknown,

    Max,
};

using Grammemes = std::bitset<static_cast<size_t>(Grammeme::Max)>;

inline Grammeme to_grammeme(std::string_view sv) {
    static const std::unordered_map<std::string_view, Grammeme> t({
        { "POST", Grammeme::Post },

        { "NOUN", Grammeme::Noun },
        { "ADJF", Grammeme::AdjectiveFull },
        { "ADJS", Grammeme::AdjectiveShort },
        { "COMP", Grammeme::Comparative },
        { "VERB", Grammeme::Verb },
        { "INFN", Grammeme::Infinitive },
        { "PRTF", Grammeme::ParticipleFull },
        { "PRTS", Grammeme::ParticipleShort },
        { "GRND", Grammeme::Gerund },
        { "NUMR", Grammeme::Numeral },
        { "ADVB", Grammeme::Adverb },
        { "NPRO", Grammeme::Pronoun },
        { "PRED", Grammeme::Predicative },
        { "PREP", Grammeme::Preposition },
        { "CONJ", Grammeme::Conjunction },
        { "PRCL", Grammeme::Particle },
        { "INTJ", Grammeme::Interjection },

        { "ANim", Grammeme::Animacy },
        { "GNdr", Grammeme::Gender },
        { "NMbr", Grammeme::Number },
        { "CAse", Grammeme::Case },
        { "ASpc", Grammeme::Aspect },
        { "TRns", Grammeme::Transitivity },
        { "PErs", Grammeme::Person },
        { "TEns", Grammeme::Tense },
        { "MOod", Grammeme::Mood },
        { "INvl", Grammeme::Clusivity },
        { "VOic", Grammeme::Voice },

        { "anim", Grammeme::Animate },
        { "inan", Grammeme::Inanimate },
        { "masc", Grammeme::Masculine },
        { "femn", Grammeme::Feminine },
        { "neut", Grammeme::Neuter },
        { "ms-f", Grammeme::Common },
        { "sing", Grammeme::Singular },
        { "plur", Grammeme::Plural },
        { "nomn", Grammeme::Nominative },
        { "gent", Grammeme::Genitive },
        { "datv", Grammeme::Dative },
        { "accs", Grammeme::Accusative },
        { "ablt", Grammeme::Ablative },
        { "loct", Grammeme::Locative },
        { "voct", Grammeme::Vocative },
        { "gen1", Grammeme::Genitive1 },
        { "gen2", Grammeme::Genitive2 },
        { "acc2", Grammeme::Accusative2 },
        { "loc1", Grammeme::Locative1 },
        { "loc2", Grammeme::Locative2 },
        { "perf", Grammeme::Perfect },
        { "impf", Grammeme::Imperfect },
        { "tran", Grammeme::Transitive },
        { "intr", Grammeme::Intransitive },
        { "1per", Grammeme::FirstPerson },
        { "2per", Grammeme::SecondPerson },
        { "3per", Grammeme::ThirdPerson },
        { "pres", Grammeme::Present },
        { "past", Grammeme::Past },
        { "futr", Grammeme::Future },
        { "indc", Grammeme::Indicative },
        { "impr", Grammeme::Imperative },
        { "incl", Grammeme::Inclusive },
        { "excl", Grammeme::Exclusive },
        { "actv", Grammeme::Active },
        { "pssv", Grammeme::Passive },

        { "Sgtm", Grammeme::SingularOnly },
        { "Pltm", Grammeme::PluralOnly },
        { "Fixd", Grammeme::Fixed },
        { "Abbr", Grammeme::Abbreviation },
        { "Name", Grammeme::Name },
        { "Surn", Grammeme::Surname },
        { "Patr", Grammeme::Patronymic },
        { "Geox", Grammeme::Toponym },
        { "Orgn", Grammeme::Organization },
        { "Trad", Grammeme::Trademark },
        { "Subx", Grammeme::NominalizationX },
        { "Supr", Grammeme::Superlative },
        { "Qual", Grammeme::Qualitative },
        { "Apro", Grammeme::Pronominal },
        { "Anum", Grammeme::Ordinal },
        { "Poss", Grammeme::Possessive },
        { "V-ey", Grammeme::EndingEy },
        { "V-oy", Grammeme::EndingOy },
        { "Cmp2", Grammeme::Comparative2 },
        { "V-ej", Grammeme::EndingEj },
        { "Impe", Grammeme::Impersonal },
        { "Impx", Grammeme::ImpersonalX },
        { "Mult", Grammeme::Multiple },
        { "Refl", Grammeme::Reflexive },
        { "Infr", Grammeme::Informal },
        { "Slng", Grammeme::Slang },
        { "Arch", Grammeme::Archaic },
        { "Litr", Grammeme::Literary },
        { "Erro", Grammeme::Typo },
        { "Dist", Grammeme::Distortion },
        { "Ques", Grammeme::Interrogative },
        { "Dmns", Grammeme::Demonstrative },
        { "Prnt", Grammeme::Parenthetic },
        { "V-be", Grammeme::EndingBe },
        { "V-en", Grammeme::EndingEn },
        { "V-ie", Grammeme::EndingIe },
        { "V-bi", Grammeme::EndingBi },
        { "Fimp", Grammeme::GerundImperfect },
        { "Prdx", Grammeme::PredicativeX },
        { "Coun", Grammeme::Counting },
        { "Coll", Grammeme::Collective },
        { "V-sh", Grammeme::EndingShi },
        { "Af-p", Grammeme::AfterPreposition },
        { "Inmx", Grammeme::AnimateX },
        { "Vpre", Grammeme::AltPreposition },
        { "Anph", Grammeme::Anaphoric },
        { "Init", Grammeme::Initial },
        { "Adjx", Grammeme::AdjectiveX },
        { "Ms-f", Grammeme::GenderSway },
        { "Hypo", Grammeme::Hypothetical },
    });
    return t.at(sv);
}

inline std::string_view to_string(Grammeme grammeme) {
    static const char *t[] {
        "POST", "NOUN", "ADJF", "ADJS", "COMP", "VERB", "INFN", "PRTF",
        "PRTS", "GRND", "NUMR", "ADVB", "NPRO", "PRED", "PREP", "CONJ",
        "PRCL", "INTJ", "ANim", "GNdr", "NMbr", "CAse", "ASpc", "TRns",
        "PErs", "TEns", "MOod", "INvl", "VOic", "anim", "inan", "masc",
        "femn", "neut", "ms-f", "sing", "plur", "nomn", "gent", "datv",
        "accs", "ablt", "loct", "voct", "gen1", "gen2", "acc2", "loc1",
        "loc2", "perf", "impf", "tran", "intr", "1per", "2per", "3per",
        "pres", "past", "futr", "indc", "impr", "incl", "excl", "actv",
        "pssv", "Sgtm", "Pltm", "Fixd", "Abbr", "Name", "Surn", "Patr",
        "Geox", "Orgn", "Trad", "Subx", "Supr", "Qual", "Apro", "Anum",
        "Poss", "V-ey", "V-oy", "Cmp2", "V-ej", "Impe", "Impx", "Mult",
        "Refl", "Infr", "Slng", "Arch", "Litr", "Erro", "Dist", "Ques",
        "Dmns", "Prnt", "V-be", "V-en", "V-ie", "V-bi", "Fimp", "Prdx",
        "Coun", "Coll", "V-sh", "Af-p", "Inmx", "Vpre", "Anph", "Init",
        "Adjx", "Ms-f", "Hypo", "uNKN", "====",
    };
    return t[static_cast<int>(grammeme)];
}
